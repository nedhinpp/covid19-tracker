{"version":3,"sources":["Components/Header.js","Components/State.js","Components/India.js","Components/World.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","Component","State","state","stateData","Axios","get","then","response","setState","data","keys","Object","this","Accordion","map","itm","ky","districts","districtData","total_active","total_confirmed","total_recover","total_deaths","district_list","x","active","confirmed","recovered","deceased","ob","push","Card","as","Button","eventKey","Body","k","district_name","India","axios","src","style","width","Title","cases","Text","deaths","World","country","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61b546a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {Navbar, Nav} from 'react-bootstrap';\n\nimport {Link} from 'react-router-dom';\n\nclass Header extends Component {\n    constructor() {\n        super()\n    }\n    render() {\n        return (\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Covid 19</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Link className=\"nav-link\" to=\"/India\">India</Link>\n                        <Link className=\"nav-link\" to=\"/World\">World</Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n\n}\n\n\nexport default Header;","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport { Accordion, Card, Button } from 'react-bootstrap';\n\n\nclass State extends Component {\n    constructor() {\n        super();\n        this.state = {\n            stateData: {}\n        }\n    }\n    componentDidMount() {\n        Axios.get(\"https://api.covid19india.org/state_district_wise.json\").then((response) => {\n\n            this.setState({ stateData: response.data });\n        });\n    }\n\n    render() {\n\n        let keys = Object.keys(this.state.stateData);\n\n        return (\n\n            <div className=\"col-md-12 mt-3\">\n                <Accordion>\n                    {\n                        keys.map((itm, ky) => {\n                            let districts = this.state.stateData[itm].districtData;\n                            let district_keys = Object.keys(districts);\n                            let total_active= 0;\n                            let total_confirmed=0;\n                            let total_recover=0;\n                            let total_deaths=0;\n                            let district_list = [];\n                            for(let x in districts){\n                                total_active+=districts[x].active;\n                                total_confirmed+=districts[x].confirmed;\n                                total_recover+=districts[x].recovered;\n                                total_deaths+=districts[x].deceased;\n                                let ob = districts[x];\n                                ob[\"district_name\"] = x;\n                                district_list.push(ob);\n                            }\n\n                            return (\n                                <Card>\n                                    <Card.Header>\n                                        <Accordion.Toggle as={Button} variant=\" secondary w-100\" eventKey={ky}>\n                                            {itm} - <span className=\"btn-primary p-1 mr-2\">Total Cases - {total_confirmed}</span>  \n                                            <span className=\"btn-warning p-1 mr-2\">Active {total_active}</span>\n                                            <span className=\"btn-success p-1 mr-2\">Recovered {total_recover}</span> \n                                            <span className=\"btn-danger p-1 mr-2\">Deaths {total_deaths}</span>\n                                        </Accordion.Toggle>\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey={ky}>\n                                        <Card.Body>\n                                            <table className=\"table table-bordered table-stripped\">\n                                                <thead>\n                                                    <tr>\n                                                        <td>District</td>\n                                                        <td>Confirmed</td>\n                                                        <td>Active</td>\n                                                        <td>Reccovered</td>\n                                                        <td>Deaths</td>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {\n                                                        district_list.map((itm, k)=>{\n                                                            return(\n                                                                <tr>\n                                                                    <td>\n                                                                        {itm.district_name}\n                                                                    </td>\n                                                                    <td>\n                                                                        {itm.confirmed}\n                                                                    </td>\n                                                                    <td>\n                                                                        {itm.active}\n                                                                    </td>\n                                                                    <td>\n                                                                        {itm.recovered}\n                                                                    </td>\n                                                                    <td>\n                                                                        {itm.deceased}\n                                                                    </td>\n                                                                </tr>\n                                                            )\n                                                        })\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n\n                            );\n                        })\n                    }\n                </Accordion>\n            </div>\n\n        );\n    }\n\n}\n\n\nexport default State;","import React, { Component } from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport State  from './State';\n\nimport axios from 'axios';\n\nclass India extends Component {\n    constructor() {\n        super();\n        this.state={\n            data:{}\n        }\n    }\n\n    componentDidMount(){\n        axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then((response)=>{\n            this.setState({data:response.data})\n        })\n    }\n\n    render() {\n\n        \n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <img src=\"https://www.countryflags.io/in/flat/64.png\" />\n\n                    <h3>INDIA</h3>\n                </div>\n                <div className=\"col-md-3\">\n                    <Card className=\"badge badge-primary\" style={{ width: '18rem' }}>\n                        <Card.Body className=\"text-center\">\n                            <Card.Title>TOTAL CASES</Card.Title>\n        <h3>{ this.state.data.cases}</h3>\n                            <Card.Text>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"col-md-3\">\n                    <Card className=\"badge badge-warning\" style={{ width: '18rem' }}>\n                        <Card.Body className=\"text-center\">\n                            <Card.Title>ACTIVE CASES</Card.Title>\n                            <h3>{ this.state.data.active}</h3>\n                            <Card.Text>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"col-md-3\">\n                    <Card className=\"badge badge-success\" style={{ width: '18rem' }}>\n                        <Card.Body className=\"text-center\">\n                            <Card.Title>RECOVERED CASES</Card.Title>\n                            <h3>{ this.state.data.recovered}</h3>\n                            <Card.Text>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"col-md-3\">\n                    <Card className=\"badge badge-danger\" style={{ width: '18rem' }}>\n                        <Card.Body className=\"text-center\">\n                            <Card.Title>DEATHS</Card.Title>\n                            <h3>{ this.state.data.deaths}</h3>\n                            <Card.Text>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <State/>\n            </div>\n\n\n\n        );\n    }\n\n}\n\n\nexport default India;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Navbar, Nav} from 'react-bootstrap';\n\nclass World extends Component {\n    constructor() {\n        super();\n        this.state={\n            data: []\n        }\n    }\ncomponentDidMount(){\n    axios.get(\"https://corona.lmao.ninja/v2/countries\").then((response)=>{\n        this.setState({data:response.data})\n    });\n}\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <table className=\"table table-bordered table-stripped\">\n                        <thead>\n                            <tr>\n                                <td>\n                                    Country\n                                </td>\n\n                                <td>\n                                    Total Cases\n                                </td>\n\n                                <td>\n                                    Recovered\n                                </td>\n\n                                <td>\n                                    Death\n                                </td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.data.map((itm, k)=>\n                                {\n                                    return(\n                                    <tr>\n                                        <td>\n                                            {itm.country}\n                                        </td>\n                                        <td>\n                                            {itm.cases}\n                                        </td>\n                                        <td>\n                                            {itm.recovered}\n                                        </td>\n                                        <td>\n                                            {itm.deaths}\n                                        </td>\n                                    </tr>\n                                    )}\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default World;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport Header from './Components/Header';\nimport India from './Components/India';\nimport World from './Components/World';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch, \n  Route\n} from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Router>\n          <Header/>\n          <Switch>\n            <Route exact path=\"/\">\n              <India />\n            </Route>\n            <Route path=\"/india\">\n              <India />\n            </Route>\n            <Route path=\"/world\">\n              <World />\n            </Route>\n          </Switch>\n        </Router>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}